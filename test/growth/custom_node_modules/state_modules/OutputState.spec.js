// const chai = require('chai').assert
// const OutputState = require('../../../../custom_node_modules/state_modules/OutputState.js')

// describe('OutputState.js Tests', () => {
//   let outputState
//   beforeEach(async () => {
//     outputState = await new OutputState();
//   })
//   it('should create an output object based on the database\'s state', async () => {
//     let answer = {
//       data: [
//         {
//           outputID: 1,
//           outputType: 'Standard Output',
//           outputName: 'Standard Output',
//           outputDescription: '',
//           OEnabled: 1,
//           OTenabled: 1,
//           outputOrder: 0,
//           scheduleState: 'Output Off',
//           scheduleOutputValue: 0,
//           manualState: 'Output Off',
//           manualOutputValue: 0,
//           delayTime: null,
//           outputPin: 2,
//           outputPWM: 0,
//           outputPWMPin: null,
//           outputPWMInversion: 0,
//           outputObject: null,
//           outputPWMObject: null,
//           outputController: 'Schedule',
//           lastOutputController: 'Schedule',
//           outputSchedules: []
//         },
//         {
//           outputID: 2,
//           outputType: 'Standard PWM Output',
//           outputName: 'Standard PWM Output',
//           outputDescription: '',
//           OEnabled: 1,
//           OTenabled: 1,
//           outputOrder: 1,
//           scheduleState: 'Output Off',
//           scheduleOutputValue: 0,
//           manualState: 'Output Off',
//           manualOutputValue: 0,
//           delayTime: null,
//           outputPin: 3,
//           outputPWM: 1,
//           outputPWMPin: 11,
//           outputPWMInversion: 0,
//           outputObject: null,
//           outputPWMObject: null,
//           outputController: 'Schedule',
//           lastOutputController: 'Schedule',
//           outputSchedules: []
//         },
//         {
//           outputID: 3,
//           outputType: 'Inverted PWM Output',
//           outputName: 'Inverted PWM Output',
//           outputDescription: '',
//           OEnabled: 1,
//           OTenabled: 1,
//           outputOrder: 2,
//           scheduleState: 'Output Off',
//           scheduleOutputValue: 0,
//           manualState: 'Output Off',
//           manualOutputValue: 0,
//           delayTime: null,
//           outputPin: 4,
//           outputPWM: 1,
//           outputPWMPin: 12,
//           outputPWMInversion: 1,
//           outputObject: null,
//           outputPWMObject: null,
//           outputController: 'Schedule',
//           lastOutputController: 'Schedule',
//           outputSchedules: []
//         }
//       ],
//       eventMappings: [{
//           eventID: 1,
//           eventName: 'Output On',
//           eventDescription: 'ON',
//           Eenabled: 1
//         },
//         {
//           eventID: 2,
//           eventName: 'Output Off',
//           eventDescription: 'OFF',
//           Eenabled: 1
//         },
//         {
//           eventID: 3,
//           eventName: 'Email Warn',
//           eventDescription: 'Email Warn',
//           Eenabled: 1
//         },
//         {
//           eventID: 4,
//           eventName: 'Python Script',
//           eventDescription: 'Run Python Script',
//           Eenabled: 1
//         }
//       ]
//     }
//     chai.deepEqual(answer, outputState)
//   })

//   it('should generate and sort data for display', () => {
//     let answer = [
//       {
//         outputID: 2,
//         outputType: 'Standard PWM Output',
//         outputName: 'Standard PWM Output',
//         outputDescription: '',
//         OEnabled: 1,
//         outputPWM: 1,
//         outputPWMInversion: 0,
//         OTenabled: 1,
//         outputOrder: 1
//       },
//       {
//         outputID: 3,
//         outputType: 'Inverted PWM Output',
//         outputName: 'Inverted PWM Output',
//         outputDescription: '',
//         OEnabled: 1,
//         outputPWM: 1,
//         outputPWMInversion: 1,
//         OTenabled: 1,
//         outputOrder: 2
//       },
//       {
//         outputID: 1,
//         outputType: 'Standard Output',
//         outputName: 'Standard Output',
//         outputDescription: '',
//         OEnabled: 1,
//         outputPWM: 0,
//         outputPWMInversion: 0,
//         OTenabled: 1,
//         outputOrder: 0
//       }
//     ]
//     chai.deepEqual(answer, outputState.getOutputIndexData())
//   })

//   it('should get the output delay time by output ID', () => {
//     let answer = null;
//     chai.equal(answer, outputState.getOutputDelayTime(1))
//   })

//   it('should set the output delay time by output ID', () => {
//     let answer = 120
//     outputState.setOutputDelayTime(1, 120)
//     chai.equal(answer, outputState.data[0].delayTime)
//   })

//   it('should set the output schedule state and schedule value by output ID', () => {
//     let answer = "Output On"
//     let answer2 = 47
//     outputState.setOutputScheduleState(1, "Output On", 47);
//     chai.equal(answer, outputState.data[0].scheduleState)
//     chai.equal(answer2, outputState.data[0].scheduleOutputValue)
//   })

//   it('should set the output manual state and schedule value by output ID', () => {
//     let answer = "Output On"
//     let answer2 = 47
//     outputState.setOutputManualState(1, "Output On", 47);
//     chai.equal(answer, outputState.data[0].manualState)
//     chai.equal(answer2, outputState.data[0].manualOutputValue)
//   })

//   it('should set the output object', () => {
//     let answer = {"board":"test"}
//     outputState.setOutputObject(1, answer);
//     chai.equal(answer, outputState.data[0].outputObject)
//   })

//   it('should set the output PWM object', () => {
//     let answer = {"board":"test"}
//     outputState.setOutputPWMObject(1, answer);
//     chai.equal(answer, outputState.data[0].outputPWMObject)
//   })

//   it('should get the output state object', () => {
//     let answer = [
//       {
//         outputID: 1,
//         outputType: 'Standard Output',
//         outputName: 'Standard Output',
//         outputDescription: '',
//         OEnabled: 1,
//         OTenabled: 1,
//         outputOrder: 0,
//         scheduleState: 'Output Off',
//         scheduleOutputValue: 0,
//         manualState: 'Output Off',
//         manualOutputValue: 0,
//         delayTime: null,
//         outputPin: 2,
//         outputPWM: 0,
//         outputPWMPin: null,
//         outputPWMInversion: 0,
//         outputObject: null,
//         outputPWMObject: null,
//         outputController: 'Schedule',
//         lastOutputController: 'Schedule',
//         outputSchedules: []
//       },
//       {
//         outputID: 2,
//         outputType: 'Standard PWM Output',
//         outputName: 'Standard PWM Output',
//         outputDescription: '',
//         OEnabled: 1,
//         OTenabled: 1,
//         outputOrder: 1,
//         scheduleState: 'Output Off',
//         scheduleOutputValue: 0,
//         manualState: 'Output Off',
//         manualOutputValue: 0,
//         delayTime: null,
//         outputPin: 3,
//         outputPWM: 1,
//         outputPWMPin: 11,
//         outputPWMInversion: 0,
//         outputObject: null,
//         outputPWMObject: null,
//         outputController: 'Schedule',
//         lastOutputController: 'Schedule',
//         outputSchedules: []
//       },
//       {
//         outputID: 3,
//         outputType: 'Inverted PWM Output',
//         outputName: 'Inverted PWM Output',
//         outputDescription: '',
//         OEnabled: 1,
//         OTenabled: 1,
//         outputOrder: 2,
//         scheduleState: 'Output Off',
//         scheduleOutputValue: 0,
//         manualState: 'Output Off',
//         manualOutputValue: 0,
//         delayTime: null,
//         outputPin: 4,
//         outputPWM: 1,
//         outputPWMPin: 12,
//         outputPWMInversion: 1,
//         outputObject: null,
//         outputPWMObject: null,
//         outputController: 'Schedule',
//         lastOutputController: 'Schedule',
//         outputSchedules: []
//       }
//     ]
//     chai.deepEqual(answer, outputState.getOutputState())
//   })
  
//   it('should get the output controller by output ID', () => {
//     let answer = "Schedule"    
//     chai.equal(answer, outputState.getOutputController(1))
//   })
  
//   it('should set the output controller by output ID', () => {
//     let answer = "Manual"
//     outputState.setOutputController(1, answer)
//     chai.equal(answer, outputState.data[0].outputController)
//   })

//   it('should set the last output controller by output ID', () => {
//     let answer = "Manual"
//     outputState.setLastOutputController(1, answer)
//     chai.equal(answer, outputState.data[0].lastOutputController)
//   })

//   it('should get the output name by output ID', () => {
//     let answer = "Standard Output"
//     chai.equal(answer, outputState.getOutputName(1))
//   })
  
//   it('should get a output object by output ID', () => {
//     let answer = {
//       outputID: 1,
//       outputType: 'Standard Output',
//       outputName: 'Standard Output',
//       outputDescription: '',
//       OEnabled: 1,
//       OTenabled: 1,
//       outputOrder: 0,
//       scheduleState: 'Output Off',
//       scheduleOutputValue: 0,
//       manualState: 'Output Off',
//       manualOutputValue: 0,
//       delayTime: null,
//       outputPin: 2,
//       outputPWM: 0,
//       outputPWMPin: null,
//       outputPWMInversion: 0,
//       outputObject: null,
//       outputPWMObject: null,
//       outputController: 'Schedule',
//       lastOutputController: 'Schedule',
//       outputSchedules: []
//     }
//     chai.deepEqual(answer, outputState.getOutput(1))
//   })
// })