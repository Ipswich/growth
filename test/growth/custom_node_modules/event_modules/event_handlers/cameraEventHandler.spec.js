const chai = require('chai')
const moment = require('moment')
const child_process = require('child_process')
const sinon = require('sinon')

const config_helper = require('../../../../../custom_node_modules/utility_modules/config_helper')
const printouts = require('../../../../../custom_node_modules/utility_modules/printouts')
const utils = require('../../../../../custom_node_modules/utility_modules/utils')

// Stub config before we require cameraEventHandler because it'll call these on
// load.
sinon.stub(config_helper, 'getConfig').returns({
  camera: {
    image_directory: './test',
    image_width: 1920,
    image_height: 1080,
    image_quality: 100,
    overlay_time: true,
    overlay_date: true,
    overlay_black: true,
    active_hours:{
      start: '00:00',
      stop: '12:00'
    }
  }
})
sinon.stub(config_helper, 'getWebData').returns({
  title: 'title'
})

const cameraEventHandler = require('../../../../../custom_node_modules/event_modules/event_handlers/cameraEventHandler')

describe('cameraEventHandler.js tests', function() {
  describe('takeImage() tests', function () {
    it('should call exec() and print on success', async function (){
      sinon.stub(child_process, 'exec').yields(null, null, null)
      let stub_log = sinon.stub(printouts, 'simpleLogPrintout')
      cameraEventHandler.takeImage()
      sinon.assert.calledOnce(stub_log)
    })
    
    it('should call exec() and print an error', async function() {
      sinon.stub(child_process, 'exec').yields('ERROR', null, null)
      let stub_error = sinon.stub(printouts, 'simpleErrorPrintout')
      cameraEventHandler.takeImage()
      sinon.assert.calledOnce(stub_error)
    })
  })

  describe('takeImage_between tests', function() {
    it('should call takeImage()', function() {
      sinon.stub(utils, 'isTimeBetween').returns(true)
      let stub_takeImage = sinon.stub(cameraEventHandler, 'takeImage')
      cameraEventHandler.takeImage_between()
      sinon.assert.calledOnce(stub_takeImage)
    })
    
    it('should not call takeImage()', function() {
      sinon.stub(utils, 'isTimeBetween').returns(false)
      let stub_takeImage = sinon.stub(cameraEventHandler, 'takeImage')
      cameraEventHandler.takeImage_between()
      sinon.assert.notCalled(stub_takeImage)
    })
  })
})