var mysql = require('mysql');
var config = require('../config/config.json');
var moment = require('moment');

//first Digital Pin on Arduino mega
var startPin = 22;

if(process.env.NODE_ENV == 'development'){
  config = config.development;
} else {
  config = config.production;
}


module.exports.getOutputMappings = function getOutputMapings(){
  //Gets enabled outputs from DB
  return new Promise(resolve => {
    var con = mysql.createConnection(config.database);
    con.connect((err) => {
      if(err){
        reject(err);
      } else {
        con.query('CALL getEnabledoutputs()', (error, results, fields) => {
          //Error on problem.
          if(error) {
            console.error("Mappings.js: getOutputMappings() failed, database error.");
            con.destroy();
            reject(error);
          } else {
            //DO STUFF WITH DATA
            con.destroy();
            var outputs = mapPins(results[0]);
            resolve(outputs);
          }
        })
      }
    });
  })
}

//Adds OUTPUTPIN property to each output, starting with
function mapPins(outputs){
  var pin = startPin;
  for(i = 0; i < outputs.length; i++){
    if (pin > 53) {
      console.error("Mappings.js: getOutputMappings() failed, out of digital pins!");
      break;
    }
    outputs[i].OUTPUTPIN = pin;
    pin++;
  };
  return outputs;
}

module.exports.getSensorMappings = function getSensorMapings(){

}
