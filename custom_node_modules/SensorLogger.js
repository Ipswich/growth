var mysql = require('mysql');
var config = require('../config/config.json');
var moment = require('moment');
var mappings = require('./Mappings.js')

if(process.env.NODE_ENV == 'development'){
  config = config.development;
} else {
  config = config.production;
}
//Adds all sensor readings to the DB
module.exports.addSensorReadings = function addSensorReadings(state) {
  return new Promise(resolve => {
    var con = mysql.createConnection(config.database);
    con.connect((err) => {
      if(err){
        reject(err);
      } else {

        // state.board.on("ready", () => {

          let i = 1;
          for(i; i <= state.sensorState.getSensorState().length; i++){
            let sensorID;
            let val;
            let obj;
            switch (state.sensorState.getSensorType(i)) {
              case 'Temperature':
                obj = state.sensorState.getSensorObject(i);
                sensorID = state.sensorState.getSensorID(i);
                val = -1;
                break;
              case 'Humidity':
                obj = state.sensorState.getSensorObject(i);
                sensorID = state.sensorState.getSensorID(i);
                val = -1;
                break;
              case 'Pressure':
                obj = state.sensorState.getSensorObject(i);
                sensorID = state.sensorState.getSensorID(i);
                val = -1;
                break;
              case 'CarbonDioxide':
                obj = state.sensorState.getSensorObject(i);
                sensorID = state.sensorState.getSensorID(i);
                val = -1;
                break;
              default:
                obj = state.sensorState.getSensorObject(i);
                sensorID = state.sensorState.getSensorID(i);
                val = -1;
              }

            let query = 'CALL addSensorReading(' + sensorID + ', ' + val + ')';
            // console.log(query);
            // con.query(query, (error, results, fields) => {
            //   //Error on problem.
            //   if(error) {
            //     console.error("SensorLogger.js: addSensorReading() failed, database error.");
            //     con.destroy();
            //     reject(error);
            //   } else {
            //     //DO STUFF WITH DATA
            //   con.destroy();
            //   }
            // })
          }
        // });
        resolve(1);
      }
    });
  })
}
