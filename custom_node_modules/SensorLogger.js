var mysql = require('mysql');
var config = require('../config/config.json');
var moment = require('moment');
var mappings = require('./Mappings.js')
var utils = require('./Utils.js')

if(process.env.NODE_ENV == 'development'){
  config = config.development;
} else {
  config = config.production;
}
//Adds all sensor readings to the DB
module.exports.addSensorReadings = function addSensorReadings(state) {
  var con;
  return new Promise(async resolve => {
    //Create connection
    con = mysql.createConnection(config.database);
    resolve(con);
  }).then(async (con) => {
    //Pass to connection handler
    await sendQuery(state, con)
    //Close connection
    con.end();
  });
}

async function sendQuery(state, con){
  let i = 1;
  //Iterate through sensor state
  for(i; i <= state.sensorState.getSensorState().length; i++){
    //Get information needed to add sensor reading
    let sensorID = state.sensorState.getSensorID(i);
    let data = await utils.getSensorVal(state, i);
    if(data){
      //Craft query
      let query = 'CALL addSensorReading(' + data.sensorID + ', ' + data.val + ')';
      //Await and send
      await con.query(query, (error, results, fields) => {
        //Error on problem.
        if(error) {
          console.error("SensorLogger.js: addSensorReading() failed, database error.");
          throw error;
        } else {
          //DO STUFF WITH DATA (IT'S ACTUALLY BEEN DONE)
        }
      })
    }
  }
}
