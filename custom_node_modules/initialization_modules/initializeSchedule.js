var sLogger = require('../event_modules/sensorLogger')
var utils = require('../utility_modules/Utils')
var tEventHandler = require('../event_modules/event_handlers/TimeEventHandler')
var sEventHandler = require('../event_modules/event_handlers/SensorEventHandler')
var pEventHandler = require('../event_modules/event_handlers/PeriodicEventHandler')

const LOGGING_TIMER = 60 * 1000 // 1 MINUTE
const EVENT_TIMER = 1 * 1000 // 1 SECOND

//Logic for event checking - checks once a minute
//Check once on load, then every minute thereafter.
async function initializeSchedule(state) {
  //Take initial reading to update database
  //Run events when ready, then set Interval.
  state.events = await dbcalls.getEnabledEvents()
  await sLogger.addSensorReadings(state)
  state.sensorState.writeSensorIndexDataToFile()
  await utils.regenerateChartData()
  await tEventHandler.TimeEventHandler(state);
  await sEventHandler.SensorEventHandler(state);
  await pEventHandler.PeriodicEventHandler(state);
  setInterval(async function() {
    await sLogger.addSensorReadings(state)
    state.sensorState.writeSensorIndexDataToFile()
    await utils.regenerateChartData()
  }, LOGGING_TIMER);
  setInterval(async function() {
    await utils.scheduleMinder(state)
    await tEventHandler.TimeEventHandler(state);
    await sEventHandler.SensorEventHandler(state);
    await pEventHandler.PeriodicEventHandler(state);
  }, EVENT_TIMER);
}
module.exports.initializeSchedule = initializeSchedule