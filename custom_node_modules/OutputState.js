var mappings = require('./Mappings.js');
var moment = require('moment');

module.exports = class OutputState {
  constructor() {
    return (async () => {
      this.data = [];
      //Get outputs
      let outputMappings = await mappings.getOutputMappings();
      //map initial values (default to off (event 2))
      for (let i = 0; i < outputMappings.length; i++){
        this.data[i] = {};
        this.data[i].outputID = outputMappings[i].outputID;
        this.data[i].outputType = outputMappings[i].outputType;
        this.data[i].scheduleState = 2;
        this.data[i].scheduleOutputValue = 0;
        this.data[i].interruptTime = null;
        this.data[i].interruptOutputValue = 0;
        this.data[i].outputPin = outputMappings[i].OUTPUT_PIN;
        this.data[i].outputPWMPin = outputMappings[i].PWM_PIN ? outputMappings[i].PWM_PIN : null;
        this.data[i].outputObject = null;
        this.data[i].outputPWMObject = null;
      }
      return this;
    })();
  }

  setOutputScheduleState(outputID, scheduleState, scheduleOutputValue) {
    for(let i = 0; i < this.data.length; i++){
      if(this.data[i].outputID == outputID){
        this.data[i].scheduleState = scheduleState;
        if(scheduleOutputValue){
          this.data[i].scheduleOutputValue = scheduleOutputValue;
        }
      }
    }
  }

  setOutputDelayTime(outputID, interruptTime, interruptOutputValue) {
    for(let i = 0; i < this.data.length; i++){
      if(this.data[i].outputID == outputID){
        this.interruptTime = interruptTime;
        if(interruptOutputValue){
          this.interruptOutputValue = interruptOutputValue;
        }
      }
    }
  }

  setOutputObject(outputID, obj) {
    for(let i = 0; i < this.data.length; i++){
      if(this.data[i].outputID == outputID){
        this.data[i].outputObject = obj;
      }
    }
  }

  setOutputPWMObject(outputID, obj) {
    for(let i = 0; i < this.data.length; i++){
      if(this.data[i].outputID == outputID){
        this.data[i].outputPWMObject = obj;
      }
    }
  }

  getOutputObject(outputID) {
    for(let i = 0; i < this.data.length; i++){
      if(this.data[i].outputID == outputID){
        return this.data[i].outputObject;
      }
    }
  }

  getOutputPWMObject(outputID) {
    for(let i = 0; i < this.data.length; i++){
      if(this.data[i].outputID == outputID){
        return this.data[i].outputPWMObject;
      }
    }
  }

  getOutputType(outputID) {
    for(let i = 0; i < this.data.length; i++){
      if(this.data[i].outputID == outputID){
        return this.data[i].outputType;
      }
    }
  }

  getOutputPin(outputID) {
    for(let i = 0; i < this.data.length; i++){
      if(this.data[i].outputID == outputID){
        return this.data[i].outputPin;
      }
    }
  }

  getOutputPWMPin(outputID) {
    for(let i = 0; i < this.data.length; i++){
      if(this.data[i].outputID == outputID){
        return this.data[i].outputPWMPin;
      }
    }
  }

  getOutputState(){
    return this.data;
  }

}
