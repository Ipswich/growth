const dbcalls = require('../../utility_modules/database_calls.js')
const eventTriggers = require('../EventTriggers.js')
const moment = require('moment');
const utils = require('../../utility_modules/Utils.js')

// Clear triggered schedules every two minutes
var triggeredSchedules = []
setInterval(()=> {
  triggeredSchedules = []
}, 1000 * 120)

//Runs time events based on current time
module.exports.TimeEventHandler = async function TimeEventHandler(state) {
  const events = await dbcalls.getEnabledEvents();
  var schedule = await eventTriggers.getSchedule('Time');
  schedule = utils.eventTypeMapper(events, schedule)
  //Error on things
  if (events == undefined || schedule == undefined) {
    console.error("TimeEventHandler.js: TimeEventHandler() failed!");
  } else {
    //If no errors, get current timestamp
    const currentTime = moment().format('HH:mm:ss');
    //Iterate through time Schedules
    for(let i = 0; i < schedule.length; i++){
      var triggerTime = moment(schedule[i].eventTriggerTime, "HH:mm:ss");
      //If trigger time matches time stamp AND schedule has not been triggered, trigger event.
      if(moment(currentTime, "HH:mm:ss").isSame(triggerTime, 'minute') && !triggeredSchedules.includes(schedule[i].scheduleID)) {
        eventTriggers.triggerEvent(schedule[i], state);
        // Add to array of triggered schedule
        triggeredSchedules.push(schedule[i].scheduleID)
      }
    }
  }
}
